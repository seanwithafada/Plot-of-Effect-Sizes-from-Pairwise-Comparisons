############################################# Plots of effect size from pairwise comparisons using emmeans
### Set up random dataframe
ID<-seq(1:90) # 90 participants
Group<-rep(1:3,each=30) # 3 parallel groups with 30 participants per arm
set.seed(123) # Allow for the random sample to be reproducible
Time01<-c(sample(1:200,90,replace=T)) # 90 measurements at first time point
Time02<-c(sample(50:250,90,replace=T)) # 90 measurements at second time point
Time03<-c(sample(100:300,90,replace=T)) # 90 measurements at third time point
df<-data.frame(ID,Group,Time01,Time02,Time03)

df$ID<-as.factor(df$ID)
df$Group<-factor(df$Group,levels=c(1,2,3),labels=c("Group 01", "Group 02","Group 03"))

### Convert to Long
library(tidyr)
DF<-gather(df,Time,Measure,3:5)

DF$Time<-as.factor(DF$Time)
View(DF)

### Linear mixed model 
## See https://youtu.be/Awo_Otgs57g for more info on mixed linear models
library(lmerTest)
result <- lmer(Measure ~ Group*Time + (1|ID), data=DF,REML=T) 
anova(result)

### Estimated marginal means
## See https://youtu.be/Te74FlbnkdE for how to plot Estimated Marginal Means in ggplot2 
## Simple main effect
library(emmeans)
(p_emm<-emmeans(result,~Group|Time) %>% pairs(adjust="Tukey",side = "="))

## Effect size
## See https://youtu.be/Um30XJAm0Vc for suggestion on presenting 
## Effect size of Pairwise Comparisons using emmeans
(emm<-emmeans(result,~Group|Time))
(eff<-eff_size(emm, sigma = sigma(result), edf = df.residual(result)))

## Output
eff<-as.data.frame(eff)
output<-data.frame(eff$Time,eff$contrast,round(eff$effect.size,2),
                   round(eff$lower.CL,2),round(eff$upper.CL,2))
names(output)<-c("Time","Effect","Effect size","95% CI (Lower)","95% CI (Upper)")
output

windows(20,10)
library(ggplot2)
(g1<- ggplot(output, aes(x=Effect, y=`Effect size`, color=Time)) + theme_bw()+
    geom_point(size=2,position=position_dodge(0.2))+
    geom_errorbar(aes(ymin=`95% CI (Lower)`, ymax=`95% CI (Upper)`), width=0.2, size=1.25,
                  position=position_dodge(0.2)))

windows(20,10)
(g2<-g1+labs(x="", y = expression("95% CI of Cohen's "~italic("d")),color="")+
    coord_cartesian(ylim=c(-1.1,1))+scale_y_continuous(breaks=seq(-1.1,1,0.15))+
    theme(text = element_text(size=15),legend.title = element_blank(),legend.position="bottom")+
    scale_color_manual(values = c("cyan","blueviolet","steelblue")))
